openapi: 3.0.0
info:
  description: |
    This is the Links API for Linktree
  version: "v1"
  title: Links API
  contact:
    email: katharinezrussell@gmail.com
tags:
  - name: Links
paths:
  /user/{userId}/link:
    post:
      tags:
        - Links
      summary: Create a new link for user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Identifier for user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - links
              properties:
                links:
                  oneOf:
                    - $ref: '#/components/schemas/Request_ClassicLink_Create'
                    - $ref: '#/components/schemas/Request_ShowsList_Create'
                    - $ref: '#/components/schemas/Request_MusicPlayer_Create'
      responses:
        '201':
          description: Link created
          content:
            application/json:
              schema:
                type: object
                required:
                  - links
                properties:
                  links:
                    oneOf:
                        - $ref: '#/components/schemas/Response_ClassicLink'
                        - $ref: '#/components/schemas/Response_ShowsList'
                        - $ref: '#/components/schemas/Response_MusicPlayer'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /user/{userId}/links:
    get:
      tags:
        - Links
      summary: Get all links for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Identifier for user
        - in: query
          name: sortBy
          required: false
          schema:
            type: string
          description: Sort response by particular attribute. e.g. date
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
          description: Order sorted by responses. e.g. ASC, DESC
      responses:
        '200':
          description: Links Returned
          content:
            application/json:
              schema:
                type: object
                required:
                  - links
                properties:
                  links:
                    $ref: "#/components/schemas/AllLinks"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    Request_ClassicLink_Create:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - classic
        attributes:
          $ref: "#/components/schemas/ClassicLink"
    
    Request_ShowsList_Create:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - shows
        attributes:
          type: object
          properties:
            title:
              type: string
              example: Shows
            url:
              type: string
            showList:
              $ref: "#/components/schemas/ShowList"
          
    Request_MusicPlayer_Create:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - music
        attributes:
          type: object
          properties:
            title:
              type: string
              example: Music
            url:
              type: string
            musicLinks:
              $ref: "#/components/schemas/MusicPlayer"
          
    Response_ClassicLink:
      type: object
      required:
        - id
        - type
        - createdAt
        - attributes
      properties:
        id:
          type: string
        type:
          enum:
            - classic
        createdAt:
          type: string
          format: YYYY-MM-DD
          example: '2020-03-27'
        attributes:
          $ref: "#/components/schemas/ClassicLink"
    
    Response_ShowsList:
      type: object
      required:
        - id
        - type
        - createdAt
        - attributes
      properties:
        id:
          type: string
        type:
          enum:
            - shows
        createdAt:
          type: string
          format: YYYY-MM-DD
          example: '2020-03-27'
        attributes:
          type: object
          properties:
            title:
              type: string
              example: Shows
            url:
              type: string
            showList:
              $ref: "#/components/schemas/ShowList"
    
    Response_MusicPlayer:
      type: object
      required:
        - id
        - type
        - createdAt
        - attributes
      properties:
        id:
          type: string
        type:
          enum:
            - music
        createdAt:
          type: string
          format: YYYY-MM-DD
          example: '2020-03-27'
        attributes:
          type: object
          properties:
              title:
                type: string
                example: Music
              url:
                type: string
              musicLinks:
                $ref: "#/components/schemas/MusicPlayer"

    ClassicLink:
      type: object
      required:
        - title
        - url
      properties:
        title:
          type: string
        url:
          type: string
        
    ShowList:
      type: array
      items:
        type: object
        required:
          - date
          - venue
          - status
          - url
        properties:
          date:
            type: string
            description: Date of the show
          venue:
            type: string
            description: Venue of the show
          status:
            type: string
            description: Status of the show. e.g. sold out
          url:
            type: string
            description: Url link to show details
    
    MusicPlayer:
      type: object
      required: 
        - musicLinks
      properties:
        musicLinks:
          $ref: '#/components/schemas/MusicLinks'
            
    MusicLinks:
      type: array
      items:
        type: object
        required:
          - title
          - icon
          - url
          - featured
        properties:
          title:
            type: string
          icon:
            type: string
          url:
            type: string
          featured:
            type: boolean
          
    AllLinks:
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/Response_ClassicLink"
          - $ref: "#/components/schemas/Response_ShowsList"
          - $ref: "#/components/schemas/Response_MusicPlayer"
          
            
    # Error Response
    ErrorResponse:
      type: object
      required:
        - status
        - code
        - detail
      properties:
        status:
          type: string
        code:
          $ref: "#/components/schemas/EnumErrorCodes"
        detail:
          type: string
          
    # Enums
    EnumErrorCodes:
      type: string
      enum:
        - INVALID_REQUEST
        - INTERNAL_SERVER_ERROR